#!/usr/bin/env ash

if [ "${VULTR_API_KEY+set}" != 'set' ]; then
  echo 'You must set your Vultr API key with $VULTR_API_KEY!' >&2
  exit 1
fi

DDNS_UPDATE_FREQUENCY="${DDNS_UPDATE_FREQUENCY:-1h}"

API="wget -qO - --header 'API-Key: $VULTR_API_KEY' https://api.vultr.com/v1"

echo "DDNS client starting, updating every $DDNS_UPDATE_FREQUENCY"

mkdir -p /domains

while :; do
  MYIPADDRESS="$(wget -qO - https://diagnostic.opendns.com/myip)"
  if echo $MYIPADDRESS | grep -qE '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$'; then
    for domain in $(ls -1 /domains); do
      RECORDS="$(eval $API/dns/records?domain=$domain)"
      if [ ! -z "$RECORDS" ]; then
        for subdomain in $(ls -1 /domains/$domain); do
          CURRENTIPADDRESS="$(echo "$RECORDS" | jq '.[] | select(.name == "'$subdomain'" and .type == "A") | .data')"
          if [ "$CURRENTIPADDRESS" = '"'"$MYIPADDRESS"'"' ]; then
            echo "No need to update $subdomain.$domain"
            continue
          fi
          RECORDID="$(echo "$RECORDS" | jq '.[] | select(.name == "'$subdomain'" and .type == "A") | .RECORDID')"
          if [ -z "$RECORDID" ]; then
            eval "$API/dns/create_record --post-data 'domain=$domain&name=$subdomain&type=A&ttl=300&data=$MYIPADDRESS'"
            echo "Created record for $subdomain.$domain"
          else
            eval "$API/dns/update_record --post-data 'domain=$domain&RECORDID=$RECORDID&data=$MYIPADDRESS'"
            echo "Updated record for $subdomain.$domain"
          fi
        done
      fi
    done
  fi
  sleep "$DDNS_UPDATE_FREQUENCY"
done
